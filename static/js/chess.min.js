




<!DOCTYPE html>
<html class=" ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>chess.js/chess.min.js at master Â· jhlywa/chess.js</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="jhlywa/chess.js" name="twitter:title" /><meta content="chess.js - A Javascript chess library for chess move generation/validation, piece placement/movement, and check/checkmate/draw detection" name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/43226?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/43226?s=400" property="og:image" /><meta content="jhlywa/chess.js" property="og:title" /><meta content="https://github.com/jhlywa/chess.js" property="og:url" /><meta content="chess.js - A Javascript chess library for chess move generation/validation, piece placement/movement, and check/checkmate/draw detection" property="og:description" />

    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="9E25DBBA:1344:147CB79:53298E85" name="octolytics-dimension-request_id" /><meta content="1234829" name="octolytics-actor-id" /><meta content="RobinTo" name="octolytics-actor-login" /><meta content="34acb0ccd6e8fea77cae71d44246b4c66cc712e5f6575f0df7a63ef7f06a9f96" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://github.global.ssl.fastly.net/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="F33Hsl+J90M2KTzVEWbd9xJfrlcLJQ0k8TGB3b7VLHk=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-9c0ec1654aa17ac751c2c3274ab0aa3cb4cc75ea.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-43c85266b41a94cc6a086312256ffbb8b0340a48.css" media="all" rel="stylesheet" type="text/css" />
    


        <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-40c107d5f9c17b1c5a24d77604a4722218ebdadd.js" type="text/javascript"></script>
        <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-89b9199ca02fab50d04e2b75e73f353f67d10085.js" type="text/javascript"></script>
        
        
      <meta http-equiv="x-pjax-version" content="d8c4e1da03a853359fc64e7b4f1b9984">

        <link data-pjax-transient rel='permalink' href='/jhlywa/chess.js/blob/2b3607437f4d04b97131d79797cb465b9d2a4c67/chess.min.js'>

  <meta name="description" content="chess.js - A Javascript chess library for chess move generation/validation, piece placement/movement, and check/checkmate/draw detection" />

  <meta content="43226" name="octolytics-dimension-user_id" /><meta content="jhlywa" name="octolytics-dimension-user_login" /><meta content="98154" name="octolytics-dimension-repository_id" /><meta content="jhlywa/chess.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="98154" name="octolytics-dimension-repository_network_root_id" /><meta content="jhlywa/chess.js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/jhlywa/chess.js/commits/master.atom" rel="alternate" title="Recent Commits to chess.js:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s" data-gotokey="n">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="RobinTo"
      data-repo="jhlywa/chess.js"
      data-branch="master"
      data-sha="c53d05762ff954f9aa5790e5265cc1e4e2cc8fc2"
  >

    <input type="hidden" name="nwo" value="jhlywa/chess.js" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/RobinTo" class="name">
        <img alt="Robin Tollisen" class=" js-avatar" data-user="1234829" height="20" src="https://avatars1.githubusercontent.com/u/1234829?s=140" width="20" /> RobinTo
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <a class="tooltipped tooltipped-s" href="/logout" data-method="post" id="logout" aria-label="Sign out">
        <span class="octicon octicon-log-out"></span>
      </a>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="jhlywa/chess.js">This repository</span>
    </li>
      <li>
        <a href="/jhlywa/chess.js/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="F33Hsl+J90M2KTzVEWbd9xJfrlcLJQ0k8TGB3b7VLHk=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="98154" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/jhlywa/chess.js/watchers">
        45
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/jhlywa/chess.js/unstar"
      class="minibutton with-count js-toggler-target star-button starred"
      aria-label="Unstar this repository" title="Unstar jhlywa/chess.js" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/jhlywa/chess.js/star"
      class="minibutton with-count js-toggler-target star-button unstarred"
      aria-label="Star this repository" title="Star jhlywa/chess.js" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/jhlywa/chess.js/stargazers">
        295
      </a>
  </div>

  </li>


        <li>
          <a href="/jhlywa/chess.js/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of jhlywa/chess.js to your account" aria-label="Fork your own copy of jhlywa/chess.js to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/jhlywa/chess.js/network" class="social-count">76</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/jhlywa" class="url fn" itemprop="url" rel="author"><span itemprop="title">jhlywa</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/jhlywa/chess.js" class="js-current-repository js-repo-home-link">chess.js</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/jhlywa/chess.js" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /jhlywa/chess.js">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/jhlywa/chess.js/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /jhlywa/chess.js/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>10</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/jhlywa/chess.js/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /jhlywa/chess.js/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>3</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/jhlywa/chess.js/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /jhlywa/chess.js/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/jhlywa/chess.js/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /jhlywa/chess.js/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/jhlywa/chess.js/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /jhlywa/chess.js/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/jhlywa/chess.js/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /jhlywa/chess.js/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/jhlywa/chess.js.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/jhlywa/chess.js.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:jhlywa/chess.js.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:jhlywa/chess.js.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/jhlywa/chess.js" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/jhlywa/chess.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save jhlywa/chess.js to your computer and use it in GitHub Desktop." aria-label="Save jhlywa/chess.js to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/jhlywa/chess.js/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download jhlywa/chess.js as a zip file"
                   title="Download jhlywa/chess.js as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:080858e66bb0eec905d5316cb768c101 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/jhlywa/chess.js/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhlywa/chess.js/blob/960/chess.min.js"
                 data-name="960"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="960">960</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhlywa/chess.js/blob/gh-pages/chess.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhlywa/chess.js/blob/master/chess.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhlywa/chess.js/blob/widget/chess.min.js"
                 data-name="widget"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="widget">widget</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhlywa/chess.js/tree/v0.1/chess.min.js"
                 data-name="v0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1">v0.1</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jhlywa/chess.js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">chess.js</span></a></span></span><span class="separator"> / </span><strong class="final-path">chess.min.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="chess.min.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/jhlywa/chess.js/contributors/master/chess.min.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>6 lines (6 sloc)</span>
          <span class="meta-divider"></span>
        <span>17.118 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w"
               href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/jhlywa/chess.js/edit/master/chess.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/jhlywa/chess.js/raw/master/chess.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/jhlywa/chess.js/blame/master/chess.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/jhlywa/chess.js/commits/master/chess.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/jhlywa/chess.js/delete/master/chess.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="s2">&quot;use strict&quot;</span><span class="p">;</span></div><div class='line' id='LC2'><span class="cm">/*! Copyright (c) 2014, Jeff Hlywa (jhlywa@gmail.com)</span></div><div class='line' id='LC3'><span class="cm"> *  Released under the BSD license</span></div><div class='line' id='LC4'><span class="cm"> *  https://github.com/jhlywa/chess.js/blob/master/LICENSE</span></div><div class='line' id='LC5'><span class="cm"> */</span></div><div class='line' id='LC6'><span class="p">;</span><span class="kd">var</span> <span class="nx">Chess</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">ao</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="s2">&quot;b&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="s2">&quot;w&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="s2">&quot;p&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="s2">&quot;n&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="s2">&quot;b&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="s2">&quot;r&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="s2">&quot;q&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ad</span><span class="o">=</span><span class="s2">&quot;k&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="s2">&quot;pnbrqkPNBRQK&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">an</span><span class="o">=</span><span class="s2">&quot;rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;1-0&quot;</span><span class="p">,</span><span class="s2">&quot;0-1&quot;</span><span class="p">,</span><span class="s2">&quot;1/2-1/2&quot;</span><span class="p">,</span><span class="s2">&quot;*&quot;</span><span class="p">];</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">15</span><span class="p">],</span><span class="nx">w</span><span class="o">:</span><span class="p">[</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="o">-</span><span class="mi">32</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">]};</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="p">[</span><span class="o">-</span><span class="mi">18</span><span class="p">,</span><span class="o">-</span><span class="mi">33</span><span class="p">,</span><span class="o">-</span><span class="mi">31</span><span class="p">,</span><span class="o">-</span><span class="mi">14</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">33</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">14</span><span class="p">],</span><span class="nx">b</span><span class="o">:</span><span class="p">[</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">15</span><span class="p">],</span><span class="nx">r</span><span class="o">:</span><span class="p">[</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">q</span><span class="o">:</span><span class="p">[</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="o">:</span><span class="p">[</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">]};</span><span class="kd">var</span> <span class="nx">ac</span><span class="o">=</span><span class="p">[</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">56</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">56</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">56</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">56</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">];</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="p">[</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">17</span><span class="p">];</span><span class="kd">var</span> <span class="nx">av</span><span class="o">=</span><span class="p">{</span><span class="nx">p</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">q</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">k</span><span class="o">:</span><span class="mi">5</span><span class="p">};</span><span class="kd">var</span> <span class="nx">aj</span><span class="o">=</span><span class="p">{</span><span class="nx">NORMAL</span><span class="o">:</span><span class="s2">&quot;n&quot;</span><span class="p">,</span><span class="nx">CAPTURE</span><span class="o">:</span><span class="s2">&quot;c&quot;</span><span class="p">,</span><span class="nx">BIG_PAWN</span><span class="o">:</span><span class="s2">&quot;b&quot;</span><span class="p">,</span><span class="nx">EP_CAPTURE</span><span class="o">:</span><span class="s2">&quot;e&quot;</span><span class="p">,</span><span class="nx">PROMOTION</span><span class="o">:</span><span class="s2">&quot;p&quot;</span><span class="p">,</span><span class="nx">KSIDE_CASTLE</span><span class="o">:</span><span class="s2">&quot;k&quot;</span><span class="p">,</span><span class="nx">QSIDE_CASTLE</span><span class="o">:</span><span class="s2">&quot;q&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="p">{</span><span class="nx">NORMAL</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">CAPTURE</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">BIG_PAWN</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">EP_CAPTURE</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">PROMOTION</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">KSIDE_CASTLE</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">QSIDE_CASTLE</span><span class="o">:</span><span class="mi">64</span><span class="p">};</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="p">{</span><span class="nx">a8</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b8</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">c8</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">d8</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">e8</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">f8</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">g8</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">h8</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">a7</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">b7</span><span class="o">:</span><span class="mi">17</span><span class="p">,</span><span class="nx">c7</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">d7</span><span class="o">:</span><span class="mi">19</span><span class="p">,</span><span class="nx">e7</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">f7</span><span class="o">:</span><span class="mi">21</span><span class="p">,</span><span class="nx">g7</span><span class="o">:</span><span class="mi">22</span><span class="p">,</span><span class="nx">h7</span><span class="o">:</span><span class="mi">23</span><span class="p">,</span><span class="nx">a6</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">b6</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="nx">c6</span><span class="o">:</span><span class="mi">34</span><span class="p">,</span><span class="nx">d6</span><span class="o">:</span><span class="mi">35</span><span class="p">,</span><span class="nx">e6</span><span class="o">:</span><span class="mi">36</span><span class="p">,</span><span class="nx">f6</span><span class="o">:</span><span class="mi">37</span><span class="p">,</span><span class="nx">g6</span><span class="o">:</span><span class="mi">38</span><span class="p">,</span><span class="nx">h6</span><span class="o">:</span><span class="mi">39</span><span class="p">,</span><span class="nx">a5</span><span class="o">:</span><span class="mi">48</span><span class="p">,</span><span class="nx">b5</span><span class="o">:</span><span class="mi">49</span><span class="p">,</span><span class="nx">c5</span><span class="o">:</span><span class="mi">50</span><span class="p">,</span><span class="nx">d5</span><span class="o">:</span><span class="mi">51</span><span class="p">,</span><span class="nx">e5</span><span class="o">:</span><span class="mi">52</span><span class="p">,</span><span class="nx">f5</span><span class="o">:</span><span class="mi">53</span><span class="p">,</span><span class="nx">g5</span><span class="o">:</span><span class="mi">54</span><span class="p">,</span><span class="nx">h5</span><span class="o">:</span><span class="mi">55</span><span class="p">,</span><span class="nx">a4</span><span class="o">:</span><span class="mi">64</span><span class="p">,</span><span class="nx">b4</span><span class="o">:</span><span class="mi">65</span><span class="p">,</span><span class="nx">c4</span><span class="o">:</span><span class="mi">66</span><span class="p">,</span><span class="nx">d4</span><span class="o">:</span><span class="mi">67</span><span class="p">,</span><span class="nx">e4</span><span class="o">:</span><span class="mi">68</span><span class="p">,</span><span class="nx">f4</span><span class="o">:</span><span class="mi">69</span><span class="p">,</span><span class="nx">g4</span><span class="o">:</span><span class="mi">70</span><span class="p">,</span><span class="nx">h4</span><span class="o">:</span><span class="mi">71</span><span class="p">,</span><span class="nx">a3</span><span class="o">:</span><span class="mi">80</span><span class="p">,</span><span class="nx">b3</span><span class="o">:</span><span class="mi">81</span><span class="p">,</span><span class="nx">c3</span><span class="o">:</span><span class="mi">82</span><span class="p">,</span><span class="nx">d3</span><span class="o">:</span><span class="mi">83</span><span class="p">,</span><span class="nx">e3</span><span class="o">:</span><span class="mi">84</span><span class="p">,</span><span class="nx">f3</span><span class="o">:</span><span class="mi">85</span><span class="p">,</span><span class="nx">g3</span><span class="o">:</span><span class="mi">86</span><span class="p">,</span><span class="nx">h3</span><span class="o">:</span><span class="mi">87</span><span class="p">,</span><span class="nx">a2</span><span class="o">:</span><span class="mi">96</span><span class="p">,</span><span class="nx">b2</span><span class="o">:</span><span class="mi">97</span><span class="p">,</span><span class="nx">c2</span><span class="o">:</span><span class="mi">98</span><span class="p">,</span><span class="nx">d2</span><span class="o">:</span><span class="mi">99</span><span class="p">,</span><span class="nx">e2</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">f2</span><span class="o">:</span><span class="mi">101</span><span class="p">,</span><span class="nx">g2</span><span class="o">:</span><span class="mi">102</span><span class="p">,</span><span class="nx">h2</span><span class="o">:</span><span class="mi">103</span><span class="p">,</span><span class="nx">a1</span><span class="o">:</span><span class="mi">112</span><span class="p">,</span><span class="nx">b1</span><span class="o">:</span><span class="mi">113</span><span class="p">,</span><span class="nx">c1</span><span class="o">:</span><span class="mi">114</span><span class="p">,</span><span class="nx">d1</span><span class="o">:</span><span class="mi">115</span><span class="p">,</span><span class="nx">e1</span><span class="o">:</span><span class="mi">116</span><span class="p">,</span><span class="nx">f1</span><span class="o">:</span><span class="mi">117</span><span class="p">,</span><span class="nx">g1</span><span class="o">:</span><span class="mi">118</span><span class="p">,</span><span class="nx">h1</span><span class="o">:</span><span class="mi">119</span><span class="p">};</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="p">{</span><span class="nx">w</span><span class="o">:</span><span class="p">[{</span><span class="nx">square</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">a1</span><span class="p">,</span><span class="nx">flag</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">},{</span><span class="nx">square</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">,</span><span class="nx">flag</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">}],</span><span class="nx">b</span><span class="o">:</span><span class="p">[{</span><span class="nx">square</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">,</span><span class="nx">flag</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">},{</span><span class="nx">square</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">h8</span><span class="p">,</span><span class="nx">flag</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">}]};</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">128</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ak</span><span class="o">=</span><span class="p">{</span><span class="nx">w</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">E</span><span class="p">};</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">w</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">ab</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ao</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nx">an</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">h</span><span class="p">(</span><span class="nx">ao</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ae</span><span class="p">(){</span><span class="nx">C</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">128</span><span class="p">);</span><span class="nx">ak</span><span class="o">=</span><span class="p">{</span><span class="nx">w</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">E</span><span class="p">};</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">w</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">Z</span><span class="o">=</span><span class="p">[];</span><span class="nx">ab</span><span class="o">=</span><span class="p">{};</span><span class="nx">q</span><span class="p">(</span><span class="nx">z</span><span class="p">())}</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(){</span><span class="nx">h</span><span class="p">(</span><span class="nx">an</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">ay</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">aD</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;12345678/&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">aa</span><span class="p">(</span><span class="nx">ay</span><span class="p">).</span><span class="nx">valid</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">ae</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">az</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">az</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">az</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="o">===</span><span class="s2">&quot;/&quot;</span><span class="p">){</span><span class="nx">aC</span><span class="o">+=</span><span class="mi">8</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">aA</span><span class="p">)){</span><span class="nx">aC</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">aA</span><span class="p">,</span><span class="mi">10</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="p">(</span><span class="nx">aA</span><span class="o">&lt;</span><span class="s2">&quot;a&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">p</span><span class="p">;</span><span class="nx">aq</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="nx">aA</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">color</span><span class="o">:</span><span class="nx">ax</span><span class="p">},</span><span class="nx">m</span><span class="p">(</span><span class="nx">aC</span><span class="p">));</span><span class="nx">aC</span><span class="o">++</span><span class="p">}}}</span><span class="nx">t</span><span class="o">=</span><span class="nx">aD</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;K&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">w</span><span class="o">|=</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Q&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">w</span><span class="o">|=</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;k&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="o">|=</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;q&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="o">|=</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">}</span><span class="nx">x</span><span class="o">=</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">E</span><span class="o">:</span><span class="nx">v</span><span class="p">[</span><span class="nx">aD</span><span class="p">[</span><span class="mi">3</span><span class="p">]];</span><span class="nx">n</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="nx">q</span><span class="p">(</span><span class="nx">z</span><span class="p">());</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">ay</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;No errors.&quot;</span><span class="p">,</span><span class="mi">1</span><span class="o">:</span><span class="s2">&quot;FEN string must contain six space-delimited fields.&quot;</span><span class="p">,</span><span class="mi">2</span><span class="o">:</span><span class="s2">&quot;6th field (move number) must be a positive integer.&quot;</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="s2">&quot;5th field (half move counter) must be a non-negative integer.&quot;</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="s2">&quot;4th field (en-passant square) is invalid.&quot;</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="s2">&quot;3rd field (castling availability) is invalid.&quot;</span><span class="p">,</span><span class="mi">6</span><span class="o">:</span><span class="s2">&quot;2nd field (side to move) is invalid.&quot;</span><span class="p">,</span><span class="mi">7</span><span class="o">:</span><span class="s2">&quot;1st field (piece positions) does not contain 8 &#39;/&#39;-delimited rows.&quot;</span><span class="p">,</span><span class="mi">8</span><span class="o">:</span><span class="s2">&quot;1st field (piece positions) is invalid [consecutive numbers].&quot;</span><span class="p">,</span><span class="mi">9</span><span class="o">:</span><span class="s2">&quot;1st field (piece positions) is invalid [invalid piece].&quot;</span><span class="p">,</span><span class="mi">10</span><span class="o">:</span><span class="s2">&quot;1st field (piece positions) is invalid [row too large].&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="mi">6</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">1</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">5</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">2</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">3</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^(-|[abcdefgh][36])$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">3</span><span class="p">])){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">4</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^(KQ?k?q?|Qk?q?|kq?|q|-)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">2</span><span class="p">])){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">5</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^(w|b)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="mi">1</span><span class="p">])){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">6</span><span class="p">]}}</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="nx">aC</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">aB</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="mi">8</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">7</span><span class="p">]}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">az</span><span class="o">&lt;</span><span class="nx">aB</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">az</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ax</span><span class="o">&lt;</span><span class="nx">aB</span><span class="p">[</span><span class="nx">az</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">ax</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">aB</span><span class="p">[</span><span class="nx">az</span><span class="p">][</span><span class="nx">ax</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">8</span><span class="p">]}}</span><span class="nx">aw</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">aB</span><span class="p">[</span><span class="nx">az</span><span class="p">][</span><span class="nx">ax</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="nx">aA</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[prnbqkPRNBQK]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">aB</span><span class="p">[</span><span class="nx">az</span><span class="p">][</span><span class="nx">ax</span><span class="p">])){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">9</span><span class="p">]}}</span><span class="nx">aw</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">aA</span><span class="o">=</span><span class="kc">false</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="o">!==</span><span class="mi">8</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">10</span><span class="p">]}}}</span><span class="k">return</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">error_number</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">aD</span><span class="p">[</span><span class="mi">0</span><span class="p">]}}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">;</span><span class="nx">aA</span><span class="o">&lt;=</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">;</span><span class="nx">aA</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">aC</span><span class="o">++</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="nx">aC</span><span class="p">;</span><span class="nx">aC</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">].</span><span class="nx">color</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">].</span><span class="nx">type</span><span class="p">;</span><span class="nx">ay</span><span class="o">+=</span><span class="p">(</span><span class="nx">ax</span><span class="o">===</span><span class="nx">k</span><span class="p">)</span><span class="o">?</span><span class="nx">aB</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">:</span><span class="nx">aB</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()}</span><span class="k">if</span><span class="p">((</span><span class="nx">aA</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="nx">aC</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="o">!==</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="s2">&quot;/&quot;</span><span class="p">}</span><span class="nx">aC</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">aA</span><span class="o">+=</span><span class="mi">8</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;K&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;Q&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;k&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;q&quot;</span><span class="p">}</span><span class="nx">az</span><span class="o">=</span><span class="nx">az</span><span class="o">||</span><span class="s2">&quot;-&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span><span class="o">===</span><span class="nx">E</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">ay</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">az</span><span class="p">,</span><span class="nx">aw</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">g</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">at</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ax</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">ax</span><span class="o">+=</span><span class="mi">2</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aw</span><span class="p">[</span><span class="nx">ax</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">aw</span><span class="p">[</span><span class="nx">ax</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">ab</span><span class="p">[</span><span class="nx">aw</span><span class="p">[</span><span class="nx">ax</span><span class="p">]]</span><span class="o">=</span><span class="nx">aw</span><span class="p">[</span><span class="nx">ax</span><span class="o">+</span><span class="mi">1</span><span class="p">]}}</span><span class="k">return</span> <span class="nx">ab</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="o">!==</span><span class="nx">an</span><span class="p">){</span><span class="nx">ab</span><span class="p">.</span><span class="nx">SetUp</span><span class="o">=</span><span class="s2">&quot;1&quot;</span><span class="p">;</span><span class="nx">ab</span><span class="p">.</span><span class="nx">FEN</span><span class="o">=</span><span class="nx">aw</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">delete</span> <span class="nx">ab</span><span class="p">.</span><span class="nx">SetUp</span><span class="p">;</span><span class="k">delete</span> <span class="nx">ab</span><span class="p">.</span><span class="nx">FEN</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">ag</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">v</span><span class="p">[</span><span class="nx">ax</span><span class="p">]];</span><span class="k">return</span><span class="p">(</span><span class="nx">aw</span><span class="p">)</span><span class="o">?</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">aw</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">aw</span><span class="p">.</span><span class="nx">color</span><span class="p">}</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aq</span><span class="p">(</span><span class="nx">aw</span><span class="p">,</span><span class="nx">ay</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;type&quot;</span> <span class="k">in</span> <span class="nx">aw</span><span class="o">&amp;&amp;</span><span class="s2">&quot;color&quot;</span> <span class="k">in</span> <span class="nx">aw</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">===-</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">ay</span> <span class="k">in</span> <span class="nx">v</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">ay</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="nx">ad</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">color</span><span class="p">]</span><span class="o">==</span><span class="nx">E</span><span class="o">||</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">color</span><span class="p">]</span><span class="o">==</span><span class="nx">ax</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">aw</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">aw</span><span class="p">.</span><span class="nx">color</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">ad</span><span class="p">){</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">color</span><span class="p">]</span><span class="o">=</span><span class="nx">ax</span><span class="p">}</span><span class="nx">q</span><span class="p">(</span><span class="nx">z</span><span class="p">());</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">ag</span><span class="p">(</span><span class="nx">ax</span><span class="p">);</span><span class="nx">C</span><span class="p">[</span><span class="nx">v</span><span class="p">[</span><span class="nx">ax</span><span class="p">]]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="o">&amp;&amp;</span><span class="nx">aw</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">ad</span><span class="p">){</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">color</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">}</span><span class="nx">q</span><span class="p">(</span><span class="nx">z</span><span class="p">());</span><span class="k">return</span> <span class="nx">aw</span><span class="p">}</span><span class="kd">function</span> <span class="nx">am</span><span class="p">(</span><span class="nx">ay</span><span class="p">,</span><span class="nx">aB</span><span class="p">,</span><span class="nx">aA</span><span class="p">,</span><span class="nx">ax</span><span class="p">,</span><span class="nx">az</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">from</span><span class="o">:</span><span class="nx">aB</span><span class="p">,</span><span class="nx">to</span><span class="o">:</span><span class="nx">aA</span><span class="p">,</span><span class="nx">flags</span><span class="o">:</span><span class="nx">ax</span><span class="p">,</span><span class="nx">piece</span><span class="o">:</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">type</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">az</span><span class="p">){</span><span class="nx">aw</span><span class="p">.</span><span class="nx">flags</span><span class="o">|=</span><span class="nx">D</span><span class="p">.</span><span class="nx">PROMOTION</span><span class="p">;</span><span class="nx">aw</span><span class="p">.</span><span class="nx">promotion</span><span class="o">=</span><span class="nx">az</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aA</span><span class="p">]){</span><span class="nx">aw</span><span class="p">.</span><span class="nx">captured</span><span class="o">=</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aA</span><span class="p">].</span><span class="nx">type</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">EP_CAPTURE</span><span class="p">){</span><span class="nx">aw</span><span class="p">.</span><span class="nx">captured</span><span class="o">=</span><span class="nx">X</span><span class="p">}}</span><span class="k">return</span> <span class="nx">aw</span><span class="p">}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">ay</span><span class="p">){</span><span class="kd">function</span> <span class="nx">aN</span><span class="p">(</span><span class="nx">aT</span><span class="p">,</span><span class="nx">aR</span><span class="p">,</span><span class="nx">aW</span><span class="p">,</span><span class="nx">aV</span><span class="p">,</span><span class="nx">aQ</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aT</span><span class="p">[</span><span class="nx">aW</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span><span class="nx">X</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="nx">aV</span><span class="p">)</span><span class="o">===</span><span class="nx">K</span><span class="o">||</span><span class="nx">U</span><span class="p">(</span><span class="nx">aV</span><span class="p">)</span><span class="o">===</span><span class="nx">W</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">aU</span><span class="o">=</span><span class="p">[</span><span class="nx">j</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">S</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aS</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aP</span><span class="o">=</span><span class="nx">aU</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aS</span><span class="o">&lt;</span><span class="nx">aP</span><span class="p">;</span><span class="nx">aS</span><span class="o">++</span><span class="p">){</span><span class="nx">aR</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">am</span><span class="p">(</span><span class="nx">aT</span><span class="p">,</span><span class="nx">aW</span><span class="p">,</span><span class="nx">aV</span><span class="p">,</span><span class="nx">aQ</span><span class="p">,</span><span class="nx">aU</span><span class="p">[</span><span class="nx">aS</span><span class="p">]))}}</span><span class="k">else</span><span class="p">{</span><span class="nx">aR</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">am</span><span class="p">(</span><span class="nx">aT</span><span class="p">,</span><span class="nx">aW</span><span class="p">,</span><span class="nx">aV</span><span class="p">,</span><span class="nx">aQ</span><span class="p">))}}</span><span class="kd">var</span> <span class="nx">aO</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aK</span><span class="o">=</span><span class="nx">au</span><span class="p">(</span><span class="nx">aA</span><span class="p">);</span><span class="kd">var</span> <span class="nx">aL</span><span class="o">=</span><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="nx">M</span><span class="p">,</span><span class="nx">w</span><span class="o">:</span><span class="nx">T</span><span class="p">};</span><span class="kd">var</span> <span class="nx">aF</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ay</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;legal&quot;</span> <span class="k">in</span> <span class="nx">ay</span><span class="p">)</span><span class="o">?</span><span class="nx">ay</span><span class="p">.</span><span class="nx">legal</span><span class="o">:</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ay</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;square&quot;</span> <span class="k">in</span> <span class="nx">ay</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ay</span><span class="p">.</span><span class="nx">square</span> <span class="k">in</span> <span class="nx">v</span><span class="p">){</span><span class="nx">aF</span><span class="o">=</span><span class="nx">aC</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">ay</span><span class="p">.</span><span class="nx">square</span><span class="p">];</span><span class="nx">aD</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">[]}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aH</span><span class="o">=</span><span class="nx">aF</span><span class="p">;</span><span class="nx">aH</span><span class="o">&lt;=</span><span class="nx">aC</span><span class="p">;</span><span class="nx">aH</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aH</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="nx">aH</span><span class="o">+=</span><span class="mi">7</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aH</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">ax</span><span class="p">.</span><span class="nx">color</span><span class="o">!==</span><span class="nx">aA</span><span class="p">){</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">X</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="nx">aH</span><span class="o">+</span><span class="nx">u</span><span class="p">[</span><span class="nx">aA</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aE</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">aH</span><span class="p">,</span><span class="nx">aE</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">NORMAL</span><span class="p">);</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="nx">aH</span><span class="o">+</span><span class="nx">u</span><span class="p">[</span><span class="nx">aA</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">aL</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">===</span><span class="nx">U</span><span class="p">(</span><span class="nx">aH</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">[</span><span class="nx">aE</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">aH</span><span class="p">,</span><span class="nx">aE</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">BIG_PAWN</span><span class="p">)}}</span><span class="k">for</span><span class="p">(</span><span class="nx">aG</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">aG</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span><span class="nx">aG</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="nx">aH</span><span class="o">+</span><span class="nx">u</span><span class="p">[</span><span class="nx">aA</span><span class="p">][</span><span class="nx">aG</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aE</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">[</span><span class="nx">aE</span><span class="p">].</span><span class="nx">color</span><span class="o">===</span><span class="nx">aK</span><span class="p">){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">aH</span><span class="p">,</span><span class="nx">aE</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">CAPTURE</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="o">===</span><span class="nx">x</span><span class="p">){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">aH</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">EP_CAPTURE</span><span class="p">)}}}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aG</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aI</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">type</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">aG</span><span class="o">&lt;</span><span class="nx">aI</span><span class="p">;</span><span class="nx">aG</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">type</span><span class="p">][</span><span class="nx">aG</span><span class="p">];</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="nx">aH</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">){</span><span class="nx">aE</span><span class="o">+=</span><span class="nx">az</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aE</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">aH</span><span class="p">,</span><span class="nx">aE</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">NORMAL</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aE</span><span class="p">].</span><span class="nx">color</span><span class="o">===</span><span class="nx">aA</span><span class="p">){</span><span class="k">break</span><span class="p">}</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">aH</span><span class="p">,</span><span class="nx">aE</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">CAPTURE</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;n&quot;</span><span class="o">||</span><span class="nx">ax</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;k&quot;</span><span class="p">){</span><span class="k">break</span><span class="p">}}}}}</span><span class="k">if</span><span class="p">((</span><span class="o">!</span><span class="nx">aD</span><span class="p">)</span><span class="o">||</span><span class="nx">aC</span><span class="o">===</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aM</span><span class="o">=</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">];</span><span class="kd">var</span> <span class="nx">aJ</span><span class="o">=</span><span class="nx">aM</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aM</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">[</span><span class="nx">aJ</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;!</span><span class="nx">af</span><span class="p">(</span><span class="nx">aK</span><span class="p">,</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">])</span><span class="o">&amp;&amp;!</span><span class="nx">af</span><span class="p">(</span><span class="nx">aK</span><span class="p">,</span><span class="nx">aM</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">af</span><span class="p">(</span><span class="nx">aK</span><span class="p">,</span><span class="nx">aJ</span><span class="p">)){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">],</span><span class="nx">aJ</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aM</span><span class="o">=</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">];</span><span class="kd">var</span> <span class="nx">aJ</span><span class="o">=</span><span class="nx">aM</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aM</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">[</span><span class="nx">aM</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">[</span><span class="nx">aM</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;!</span><span class="nx">af</span><span class="p">(</span><span class="nx">aK</span><span class="p">,</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">])</span><span class="o">&amp;&amp;!</span><span class="nx">af</span><span class="p">(</span><span class="nx">aK</span><span class="p">,</span><span class="nx">aM</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">af</span><span class="p">(</span><span class="nx">aK</span><span class="p">,</span><span class="nx">aJ</span><span class="p">)){</span><span class="nx">aN</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">aO</span><span class="p">,</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aA</span><span class="p">],</span><span class="nx">aJ</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">)}}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">aB</span><span class="p">){</span><span class="k">return</span> <span class="nx">aO</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aH</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aI</span><span class="o">=</span><span class="nx">aO</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aH</span><span class="o">&lt;</span><span class="nx">aI</span><span class="p">;</span><span class="nx">aH</span><span class="o">++</span><span class="p">){</span><span class="nx">al</span><span class="p">(</span><span class="nx">aO</span><span class="p">[</span><span class="nx">aH</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="p">(</span><span class="nx">aA</span><span class="p">)){</span><span class="nx">aw</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">aO</span><span class="p">[</span><span class="nx">aH</span><span class="p">])}</span><span class="nx">G</span><span class="p">()}</span><span class="k">return</span> <span class="nx">aw</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ar</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">){</span><span class="nx">ay</span><span class="o">=</span><span class="s2">&quot;O-O&quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">){</span><span class="nx">ay</span><span class="o">=</span><span class="s2">&quot;O-O-O&quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">ax</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">piece</span><span class="o">!==</span><span class="nx">X</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">piece</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">aw</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">CAPTURE</span><span class="o">|</span><span class="nx">D</span><span class="p">.</span><span class="nx">EP_CAPTURE</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">piece</span><span class="o">===</span><span class="nx">X</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="nx">m</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">from</span><span class="p">)[</span><span class="mi">0</span><span class="p">]}</span><span class="nx">ay</span><span class="o">+=</span><span class="s2">&quot;x&quot;</span><span class="p">}</span><span class="nx">ay</span><span class="o">+=</span><span class="nx">m</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">PROMOTION</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">ax</span><span class="p">.</span><span class="nx">promotion</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()}}}</span><span class="nx">al</span><span class="p">(</span><span class="nx">ax</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="p">()){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">()){</span><span class="nx">ay</span><span class="o">+=</span><span class="s2">&quot;#&quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">ay</span><span class="o">+=</span><span class="s2">&quot;+&quot;</span><span class="p">}}</span><span class="nx">G</span><span class="p">();</span><span class="k">return</span> <span class="nx">ay</span><span class="p">}</span><span class="kd">function</span> <span class="nx">af</span><span class="p">(</span><span class="nx">ax</span><span class="p">,</span><span class="nx">aD</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">;</span><span class="nx">aA</span><span class="o">&lt;=</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">;</span><span class="nx">aA</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="nx">aA</span><span class="o">+=</span><span class="mi">7</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">].</span><span class="nx">color</span><span class="o">!==</span><span class="nx">ax</span><span class="p">){</span><span class="k">continue</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">];</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">aA</span><span class="o">-</span><span class="nx">aD</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="nx">aw</span><span class="o">+</span><span class="mi">119</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ac</span><span class="p">[</span><span class="nx">aC</span><span class="p">]</span><span class="o">&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">av</span><span class="p">[</span><span class="nx">aE</span><span class="p">.</span><span class="nx">type</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">X</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="p">.</span><span class="nx">color</span><span class="o">===</span><span class="nx">k</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="p">.</span><span class="nx">color</span><span class="o">===</span><span class="nx">p</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aE</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;n&quot;</span><span class="o">||</span><span class="nx">aE</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;k&quot;</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">aC</span><span class="p">];</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="nx">aA</span><span class="o">+</span><span class="nx">ay</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">az</span><span class="o">!==</span><span class="nx">aD</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">aB</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">az</span><span class="o">+=</span><span class="nx">ay</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">aB</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">af</span><span class="p">(</span><span class="nx">au</span><span class="p">(</span><span class="nx">aw</span><span class="p">),</span><span class="nx">ak</span><span class="p">[</span><span class="nx">aw</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(){</span><span class="k">return</span> <span class="nx">L</span><span class="p">(</span><span class="nx">t</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(){</span><span class="k">return</span> <span class="nx">R</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">().</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ah</span><span class="p">(){</span><span class="k">return</span> <span class="o">!</span><span class="nx">R</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">().</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">;</span><span class="nx">ay</span><span class="o">&lt;=</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">;</span><span class="nx">ay</span><span class="o">++</span><span class="p">){</span><span class="nx">aD</span><span class="o">=</span><span class="p">(</span><span class="nx">aD</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ay</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="nx">ay</span><span class="o">+=</span><span class="mi">7</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">ay</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="p">){</span><span class="nx">aC</span><span class="p">[</span><span class="nx">aA</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">aA</span><span class="p">.</span><span class="nx">type</span> <span class="k">in</span> <span class="nx">aC</span><span class="p">)</span><span class="o">?</span><span class="nx">aC</span><span class="p">[</span><span class="nx">aA</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">s</span><span class="p">){</span><span class="nx">aB</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">aD</span><span class="p">)}</span><span class="nx">ax</span><span class="o">++</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="o">===</span><span class="mi">2</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="o">===</span><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">aC</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">===</span><span class="mi">1</span><span class="o">||</span><span class="nx">aC</span><span class="p">[</span><span class="nx">S</span><span class="p">]</span><span class="o">===</span><span class="mi">1</span><span class="p">)){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="o">===</span><span class="nx">aC</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">+</span><span class="mi">2</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">aB</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ay</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">;</span><span class="nx">ay</span><span class="o">++</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="nx">aB</span><span class="p">[</span><span class="nx">ay</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="nx">az</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">az</span><span class="o">===</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">G</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">aw</span><span class="p">){</span><span class="k">break</span><span class="p">}</span><span class="nx">ay</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">aw</span><span class="p">)}</span><span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="nx">z</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">ax</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">az</span> <span class="k">in</span> <span class="nx">ax</span><span class="p">)</span><span class="o">?</span><span class="nx">ax</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">&gt;=</span><span class="mi">3</span><span class="p">){</span><span class="nx">aA</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ay</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">break</span><span class="p">}</span><span class="nx">al</span><span class="p">(</span><span class="nx">ay</span><span class="p">.</span><span class="nx">pop</span><span class="p">())}</span><span class="k">return</span> <span class="nx">aA</span><span class="p">}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="nx">Z</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">move</span><span class="o">:</span><span class="nx">aw</span><span class="p">,</span><span class="nx">kings</span><span class="o">:</span><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="nx">ak</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="o">:</span><span class="nx">ak</span><span class="p">.</span><span class="nx">w</span><span class="p">},</span><span class="nx">turn</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">castling</span><span class="o">:</span><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">w</span><span class="p">},</span><span class="nx">ep_square</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">half_moves</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">move_number</span><span class="o">:</span><span class="nx">g</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">al</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="nx">au</span><span class="p">(</span><span class="nx">aB</span><span class="p">);</span><span class="nx">e</span><span class="p">(</span><span class="nx">ax</span><span class="p">);</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">from</span><span class="p">];</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">from</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">EP_CAPTURE</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="nx">p</span><span class="p">){</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">16</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">16</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">PROMOTION</span><span class="p">){</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">ax</span><span class="p">.</span><span class="nx">promotion</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">aB</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span><span class="nx">ad</span><span class="p">){</span><span class="nx">ak</span><span class="p">[</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">].</span><span class="nx">color</span><span class="p">]</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">C</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">];</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="nx">C</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">];</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}}</span><span class="nx">d</span><span class="p">[</span><span class="nx">aB</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">aB</span><span class="p">]){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aw</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">ay</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">;</span><span class="nx">ay</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">from</span><span class="o">===</span><span class="nx">V</span><span class="p">[</span><span class="nx">aB</span><span class="p">][</span><span class="nx">ay</span><span class="p">].</span><span class="nx">square</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">aB</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">V</span><span class="p">[</span><span class="nx">aB</span><span class="p">][</span><span class="nx">ay</span><span class="p">].</span><span class="nx">flag</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">aB</span><span class="p">]</span><span class="o">^=</span><span class="nx">V</span><span class="p">[</span><span class="nx">aB</span><span class="p">][</span><span class="nx">ay</span><span class="p">].</span><span class="nx">flag</span><span class="p">;</span><span class="k">break</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">aC</span><span class="p">]){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aw</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="nx">aC</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">ay</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">;</span><span class="nx">ay</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">===</span><span class="nx">V</span><span class="p">[</span><span class="nx">aC</span><span class="p">][</span><span class="nx">ay</span><span class="p">].</span><span class="nx">square</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">aC</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">V</span><span class="p">[</span><span class="nx">aC</span><span class="p">][</span><span class="nx">ay</span><span class="p">].</span><span class="nx">flag</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">aC</span><span class="p">]</span><span class="o">^=</span><span class="nx">V</span><span class="p">[</span><span class="nx">aC</span><span class="p">][</span><span class="nx">ay</span><span class="p">].</span><span class="nx">flag</span><span class="p">;</span><span class="k">break</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">BIG_PAWN</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="s2">&quot;b&quot;</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">16</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">x</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">16</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">piece</span><span class="o">===</span><span class="nx">X</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">CAPTURE</span><span class="o">|</span><span class="nx">D</span><span class="p">.</span><span class="nx">EP_CAPTURE</span><span class="p">)){</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">n</span><span class="o">++</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="nx">p</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">}</span><span class="nx">t</span><span class="o">=</span><span class="nx">au</span><span class="p">(</span><span class="nx">t</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">move</span><span class="p">;</span><span class="nx">ak</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">kings</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">turn</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">castling</span><span class="p">;</span><span class="nx">x</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">ep_square</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">half_moves</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">move_number</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="nx">au</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">C</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">from</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="p">];</span><span class="nx">C</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">from</span><span class="p">].</span><span class="nx">type</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">piece</span><span class="p">;</span><span class="nx">C</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">CAPTURE</span><span class="p">){</span><span class="nx">C</span><span class="p">[</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">aw</span><span class="p">.</span><span class="nx">captured</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">aC</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">EP_CAPTURE</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ay</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aB</span><span class="o">===</span><span class="nx">p</span><span class="p">){</span><span class="nx">ay</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">16</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">ay</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">16</span><span class="p">}</span><span class="nx">C</span><span class="p">[</span><span class="nx">ay</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">X</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">aC</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="o">|</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">az</span><span class="p">,</span><span class="nx">aA</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">KSIDE_CASTLE</span><span class="p">){</span><span class="nx">az</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">aA</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">.</span><span class="nx">flags</span><span class="o">&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">QSIDE_CASTLE</span><span class="p">){</span><span class="nx">az</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="nx">aA</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">to</span><span class="o">+</span><span class="mi">1</span><span class="p">}}</span><span class="nx">C</span><span class="p">[</span><span class="nx">az</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">];</span><span class="nx">C</span><span class="p">[</span><span class="nx">aA</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">aw</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">b</span><span class="p">();</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">from</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aF</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">to</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aI</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">piece</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aH</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aC</span><span class="o">=</span><span class="nx">aw</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">az</span><span class="o">&lt;</span><span class="nx">aC</span><span class="p">;</span><span class="nx">az</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">aw</span><span class="p">[</span><span class="nx">az</span><span class="p">].</span><span class="nx">from</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">aw</span><span class="p">[</span><span class="nx">az</span><span class="p">].</span><span class="nx">to</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aG</span><span class="o">=</span><span class="nx">aw</span><span class="p">[</span><span class="nx">az</span><span class="p">].</span><span class="nx">piece</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aI</span><span class="o">===</span><span class="nx">aG</span><span class="o">&amp;&amp;</span><span class="nx">aE</span><span class="o">!==</span><span class="nx">aA</span><span class="o">&amp;&amp;</span><span class="nx">aF</span><span class="o">===</span><span class="nx">ay</span><span class="p">){</span><span class="nx">aH</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="nx">aE</span><span class="p">)</span><span class="o">===</span><span class="nx">U</span><span class="p">(</span><span class="nx">aA</span><span class="p">)){</span><span class="nx">aD</span><span class="o">++</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">aE</span><span class="p">)</span><span class="o">===</span><span class="nx">y</span><span class="p">(</span><span class="nx">aA</span><span class="p">)){</span><span class="nx">aB</span><span class="o">++</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">aH</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">aB</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">m</span><span class="p">(</span><span class="nx">aE</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aB</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">m</span><span class="p">(</span><span class="nx">aE</span><span class="p">).</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">m</span><span class="p">(</span><span class="nx">aE</span><span class="p">).</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)}}}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="s2">&quot;   +------------------------+\n&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">;</span><span class="nx">ax</span><span class="o">&lt;=</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">;</span><span class="nx">ax</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="nx">ax</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot; 87654321&quot;</span><span class="p">[</span><span class="nx">U</span><span class="p">(</span><span class="nx">ax</span><span class="p">)]</span><span class="o">+</span><span class="s2">&quot; |&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot; . &quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">].</span><span class="nx">type</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">ax</span><span class="p">].</span><span class="nx">color</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="p">(</span><span class="nx">aw</span><span class="o">===</span><span class="nx">k</span><span class="p">)</span><span class="o">?</span><span class="nx">ay</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">:</span><span class="nx">ay</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">aA</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">}</span><span class="k">if</span><span class="p">((</span><span class="nx">ax</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;|\n&quot;</span><span class="p">;</span><span class="nx">ax</span><span class="o">+=</span><span class="mi">8</span><span class="p">}}</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;   +------------------------+\n&quot;</span><span class="p">;</span><span class="nx">az</span><span class="o">+=</span><span class="s2">&quot;     a  b  c  d  e  f  g  h\n&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">az</span><span class="p">}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">aw</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">aw</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">aw</span><span class="p">),</span><span class="nx">ax</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">aw</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;abcdefgh&quot;</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">ay</span><span class="p">,</span><span class="nx">ay</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;87654321&quot;</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">ax</span><span class="p">,</span><span class="nx">ax</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">au</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">aw</span><span class="o">===</span><span class="nx">k</span><span class="o">?</span><span class="nx">p</span><span class="o">:</span><span class="nx">k</span><span class="p">}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;0123456789&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">aw</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">az</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">az</span><span class="p">);</span><span class="nx">ay</span><span class="p">.</span><span class="nx">san</span><span class="o">=</span><span class="nx">ar</span><span class="p">(</span><span class="nx">ay</span><span class="p">);</span><span class="nx">ay</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">ay</span><span class="p">.</span><span class="nx">to</span><span class="p">);</span><span class="nx">ay</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">ay</span><span class="p">.</span><span class="nx">from</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aw</span> <span class="k">in</span> <span class="nx">D</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">aw</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">ay</span><span class="p">.</span><span class="nx">flags</span><span class="p">){</span><span class="nx">ax</span><span class="o">+=</span><span class="nx">aj</span><span class="p">[</span><span class="nx">aw</span><span class="p">]}}</span><span class="nx">ay</span><span class="p">.</span><span class="nx">flags</span><span class="o">=</span><span class="nx">ax</span><span class="p">;</span><span class="k">return</span> <span class="nx">ay</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">ay</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="p">(</span><span class="nx">ay</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ax</span> <span class="k">in</span> <span class="nx">ay</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ax</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="nx">aw</span><span class="p">[</span><span class="nx">ax</span><span class="p">]</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">ax</span><span class="p">])}</span><span class="k">else</span><span class="p">{</span><span class="nx">aw</span><span class="p">[</span><span class="nx">ax</span><span class="p">]</span><span class="o">=</span><span class="nx">ay</span><span class="p">[</span><span class="nx">ax</span><span class="p">]}}</span><span class="k">return</span> <span class="nx">aw</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ap</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">aw</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ai</span><span class="p">(</span><span class="nx">aC</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">b</span><span class="p">({</span><span class="nx">legal</span><span class="o">:</span><span class="kc">false</span><span class="p">});</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aw</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aA</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">;</span><span class="nx">aA</span><span class="o">++</span><span class="p">){</span><span class="nx">al</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">aA</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="p">(</span><span class="nx">ay</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="nx">ai</span><span class="p">(</span><span class="nx">aC</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">az</span><span class="o">+=</span><span class="nx">aB</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">az</span><span class="o">++</span><span class="p">}}</span><span class="nx">G</span><span class="p">()}</span><span class="k">return</span> <span class="nx">az</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">WHITE</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">BLACK</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">PAWN</span><span class="o">:</span><span class="nx">X</span><span class="p">,</span><span class="nx">KNIGHT</span><span class="o">:</span><span class="nx">S</span><span class="p">,</span><span class="nx">BISHOP</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">ROOK</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">QUEEN</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">KING</span><span class="o">:</span><span class="nx">ad</span><span class="p">,</span><span class="nx">SQUARES</span><span class="o">:</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">a8</span><span class="p">;</span><span class="nx">aw</span><span class="o">&lt;=</span><span class="nx">v</span><span class="p">.</span><span class="nx">h1</span><span class="p">;</span><span class="nx">aw</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="o">&amp;</span><span class="mi">136</span><span class="p">){</span><span class="nx">aw</span><span class="o">+=</span><span class="mi">7</span><span class="p">;</span><span class="k">continue</span><span class="p">}</span><span class="nx">ax</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">(</span><span class="nx">aw</span><span class="p">))}</span><span class="k">return</span> <span class="nx">ax</span><span class="p">})(),</span><span class="nx">FLAGS</span><span class="o">:</span><span class="nx">aj</span><span class="p">,</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">h</span><span class="p">(</span><span class="nx">aw</span><span class="p">)},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Y</span><span class="p">()},</span><span class="nx">moves</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">az</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">az</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aw</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aA</span><span class="o">&lt;</span><span class="nx">aw</span><span class="p">;</span><span class="nx">aA</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">az</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;verbose&quot;</span> <span class="k">in</span> <span class="nx">az</span><span class="o">&amp;&amp;</span><span class="nx">az</span><span class="p">.</span><span class="nx">verbose</span><span class="p">){</span><span class="nx">ax</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aA</span><span class="p">]))}</span><span class="k">else</span><span class="p">{</span><span class="nx">ax</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ar</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aA</span><span class="p">]))}}</span><span class="k">return</span> <span class="nx">ax</span><span class="p">},</span><span class="nx">in_check</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">R</span><span class="p">()},</span><span class="nx">in_checkmate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">I</span><span class="p">()},</span><span class="nx">in_stalemate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">ah</span><span class="p">()},</span><span class="nx">in_draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">n</span><span class="o">&gt;=</span><span class="mi">100</span><span class="o">||</span><span class="nx">ah</span><span class="p">()</span><span class="o">||</span><span class="nx">A</span><span class="p">()</span><span class="o">||</span><span class="nx">i</span><span class="p">()},</span><span class="nx">insufficient_material</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">A</span><span class="p">()},</span><span class="nx">in_threefold_repetition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">i</span><span class="p">()},</span><span class="nx">game_over</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">n</span><span class="o">&gt;=</span><span class="mi">100</span><span class="o">||</span><span class="nx">I</span><span class="p">()</span><span class="o">||</span><span class="nx">ah</span><span class="p">()</span><span class="o">||</span><span class="nx">A</span><span class="p">()</span><span class="o">||</span><span class="nx">i</span><span class="p">()},</span><span class="nx">validate_fen</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">aw</span><span class="p">)},</span><span class="nx">fen</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">z</span><span class="p">()},</span><span class="nx">pgn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aG</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aG</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">aG</span><span class="p">.</span><span class="nx">newline_char</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">aG</span><span class="p">.</span><span class="nx">newline_char</span><span class="o">:</span><span class="s2">&quot;\n&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aF</span><span class="o">=</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aG</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">aG</span><span class="p">.</span><span class="nx">max_width</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">aG</span><span class="p">.</span><span class="nx">max_width</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aH</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aB</span> <span class="k">in</span> <span class="nx">ab</span><span class="p">){</span><span class="nx">aH</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">aB</span><span class="o">+</span><span class="s1">&#39; &quot;&#39;</span><span class="o">+</span><span class="nx">ab</span><span class="p">[</span><span class="nx">aB</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="o">+</span><span class="nx">az</span><span class="p">);</span><span class="nx">aD</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="o">&amp;&amp;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">aH</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">az</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">aE</span><span class="o">=</span><span class="p">[];</span><span class="k">while</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">aE</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">G</span><span class="p">())}</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">aE</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">aE</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">aA</span><span class="p">.</span><span class="nx">color</span><span class="o">===</span><span class="s2">&quot;b&quot;</span><span class="p">){</span><span class="nx">ay</span><span class="o">=</span><span class="s2">&quot;1. ...&quot;</span><span class="p">;</span><span class="nx">aw</span><span class="o">++</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="p">.</span><span class="nx">color</span><span class="o">===</span><span class="s2">&quot;w&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ay</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">ax</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ay</span><span class="p">)}</span><span class="nx">ay</span><span class="o">=</span><span class="nx">aw</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">;</span><span class="nx">aw</span><span class="o">++</span><span class="p">}}</span><span class="nx">ay</span><span class="o">=</span><span class="nx">ay</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">ar</span><span class="p">(</span><span class="nx">aA</span><span class="p">);</span><span class="nx">al</span><span class="p">(</span><span class="nx">aA</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">ay</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">ax</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ay</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ab</span><span class="p">.</span><span class="nx">Result</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">ax</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ab</span><span class="p">.</span><span class="nx">Result</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">aF</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">aH</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">ax</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">aB</span><span class="o">&lt;</span><span class="nx">ax</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aB</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="o">+</span><span class="nx">ax</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">aF</span><span class="o">&amp;&amp;</span><span class="nx">aB</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aH</span><span class="p">[</span><span class="nx">aH</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot; &quot;</span><span class="p">){</span><span class="nx">aH</span><span class="p">.</span><span class="nx">pop</span><span class="p">()}</span><span class="nx">aH</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">az</span><span class="p">);</span><span class="nx">aC</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">aB</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">aH</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">aC</span><span class="o">++</span><span class="p">}}</span><span class="nx">aH</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">aB</span><span class="p">]);</span><span class="nx">aC</span><span class="o">+=</span><span class="nx">ax</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">length</span><span class="p">}</span><span class="k">return</span> <span class="nx">aH</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">load_pgn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aG</span><span class="p">,</span><span class="nx">aK</span><span class="p">){</span><span class="kd">function</span> <span class="nx">aL</span><span class="p">(</span><span class="nx">aM</span><span class="p">){</span><span class="k">return</span> <span class="nx">aM</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;\\&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">az</span><span class="p">(</span><span class="nx">aO</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aN</span><span class="o">=</span><span class="nx">b</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aP</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">aM</span><span class="o">=</span><span class="nx">aN</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aP</span><span class="o">&lt;</span><span class="nx">aM</span><span class="p">;</span><span class="nx">aP</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aO</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[+#?!=]+$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">==</span><span class="nx">ar</span><span class="p">(</span><span class="nx">aN</span><span class="p">[</span><span class="nx">aP</span><span class="p">]).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[+#?!=]+$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)){</span><span class="k">return</span> <span class="nx">aN</span><span class="p">[</span><span class="nx">aP</span><span class="p">]}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aE</span><span class="p">(</span><span class="nx">aM</span><span class="p">){</span><span class="k">return</span> <span class="nx">az</span><span class="p">(</span><span class="nx">ap</span><span class="p">(</span><span class="nx">aM</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">aw</span><span class="p">(</span><span class="nx">aM</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aO</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aN</span> <span class="k">in</span> <span class="nx">aM</span><span class="p">){</span><span class="nx">aO</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">return</span> <span class="nx">aO</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aI</span><span class="p">(</span><span class="nx">aT</span><span class="p">,</span><span class="nx">aM</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aR</span><span class="o">=</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aM</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">aM</span><span class="p">.</span><span class="nx">newline_char</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">aM</span><span class="p">.</span><span class="nx">newline_char</span><span class="o">:</span><span class="s2">&quot;\r?\n&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aQ</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">aS</span><span class="o">=</span><span class="nx">aT</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">aL</span><span class="p">(</span><span class="nx">aR</span><span class="p">)));</span><span class="kd">var</span> <span class="nx">aO</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aP</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aN</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">aN</span><span class="o">&lt;</span><span class="nx">aS</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aN</span><span class="o">++</span><span class="p">){</span><span class="nx">aO</span><span class="o">=</span><span class="nx">aS</span><span class="p">[</span><span class="nx">aN</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\[([A-Z][A-Za-z]*)\s.*\]$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="nx">aP</span><span class="o">=</span><span class="nx">aS</span><span class="p">[</span><span class="nx">aN</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\[[A-Za-z]+\s&quot;(.*)&quot;\]$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ap</span><span class="p">(</span><span class="nx">aO</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">aQ</span><span class="p">[</span><span class="nx">aO</span><span class="p">]</span><span class="o">=</span><span class="nx">aP</span><span class="p">}}</span><span class="k">return</span> <span class="nx">aQ</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aK</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">aK</span><span class="p">.</span><span class="nx">newline_char</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">aK</span><span class="p">.</span><span class="nx">newline_char</span><span class="o">:</span><span class="s2">&quot;\r?\n&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">aH</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(\\[(.|&quot;</span><span class="o">+</span><span class="nx">aL</span><span class="p">(</span><span class="nx">aB</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)*\\])(&quot;</span><span class="o">+</span><span class="nx">aL</span><span class="p">(</span><span class="nx">aB</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)*1.(&quot;</span><span class="o">+</span><span class="nx">aL</span><span class="p">(</span><span class="nx">aB</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;|.)*$&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">aD</span><span class="o">=</span><span class="nx">aG</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">aH</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">aD</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="s2">&quot;[&quot;</span><span class="p">){</span><span class="nx">aD</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="nx">Y</span><span class="p">();</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="nx">aI</span><span class="p">(</span><span class="nx">aD</span><span class="p">,</span><span class="nx">aK</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aJ</span> <span class="k">in</span> <span class="nx">aA</span><span class="p">){</span><span class="nx">at</span><span class="p">([</span><span class="nx">aJ</span><span class="p">,</span><span class="nx">aA</span><span class="p">[</span><span class="nx">aJ</span><span class="p">]])}</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">aG</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">aD</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">aL</span><span class="p">(</span><span class="nx">aB</span><span class="p">),</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">ay</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\{[^}]+\})+?/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">ay</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\d+\./g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="nx">ap</span><span class="p">(</span><span class="nx">ay</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">));</span><span class="nx">ax</span><span class="o">=</span><span class="nx">ax</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/,,+/g</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">aC</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aF</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">aF</span><span class="o">&lt;</span><span class="nx">ax</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">aF</span><span class="o">++</span><span class="p">){</span><span class="nx">aC</span><span class="o">=</span><span class="nx">aE</span><span class="p">(</span><span class="nx">ax</span><span class="p">[</span><span class="nx">aF</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">al</span><span class="p">(</span><span class="nx">aC</span><span class="p">)}}</span><span class="nx">aC</span><span class="o">=</span><span class="nx">ax</span><span class="p">[</span><span class="nx">ax</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">aC</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aw</span><span class="p">(</span><span class="nx">ab</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">ab</span><span class="p">.</span><span class="nx">Result</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">at</span><span class="p">([</span><span class="s2">&quot;Result&quot;</span><span class="p">,</span><span class="nx">aC</span><span class="p">])}}</span><span class="k">else</span><span class="p">{</span><span class="nx">aC</span><span class="o">=</span><span class="nx">aE</span><span class="p">(</span><span class="nx">aC</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">aC</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">al</span><span class="p">(</span><span class="nx">aC</span><span class="p">)}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">},</span><span class="nx">header</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">at</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">ascii</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">()},</span><span class="nx">turn</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">move</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aA</span><span class="p">){</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ay</span><span class="o">=</span><span class="nx">b</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aA</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">ax</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aB</span><span class="o">&lt;</span><span class="nx">ax</span><span class="p">;</span><span class="nx">aB</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="o">===</span><span class="nx">ar</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">])){</span><span class="nx">az</span><span class="o">=</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">];</span><span class="k">break</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">aA</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aB</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">ax</span><span class="o">=</span><span class="nx">ay</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aB</span><span class="o">&lt;</span><span class="nx">ax</span><span class="p">;</span><span class="nx">aB</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">aA</span><span class="p">.</span><span class="nx">from</span><span class="o">===</span><span class="nx">m</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">from</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">aA</span><span class="p">.</span><span class="nx">to</span><span class="o">===</span><span class="nx">m</span><span class="p">(</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">to</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;promotion&quot;</span> <span class="k">in</span> <span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">])</span><span class="o">||</span><span class="nx">aA</span><span class="p">.</span><span class="nx">promotion</span><span class="o">===</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">].</span><span class="nx">promotion</span><span class="p">)){</span><span class="nx">az</span><span class="o">=</span><span class="nx">ay</span><span class="p">[</span><span class="nx">aB</span><span class="p">];</span><span class="k">break</span><span class="p">}}}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">az</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">az</span><span class="p">);</span><span class="nx">al</span><span class="p">(</span><span class="nx">az</span><span class="p">);</span><span class="k">return</span> <span class="nx">aw</span><span class="p">},</span><span class="nx">undo</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">G</span><span class="p">();</span><span class="k">return</span><span class="p">(</span><span class="nx">aw</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="p">(</span><span class="nx">aw</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">ae</span><span class="p">()},</span><span class="nx">put</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aw</span><span class="p">,</span><span class="nx">ax</span><span class="p">){</span><span class="k">return</span> <span class="nx">aq</span><span class="p">(</span><span class="nx">aw</span><span class="p">,</span><span class="nx">ax</span><span class="p">)},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">ag</span><span class="p">(</span><span class="nx">aw</span><span class="p">)},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">aw</span><span class="p">)},</span><span class="nx">perft</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aw</span><span class="p">){</span><span class="k">return</span> <span class="nx">ai</span><span class="p">(</span><span class="nx">aw</span><span class="p">)},</span><span class="nx">square_color</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span> <span class="k">in</span> <span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">ax</span><span class="p">];</span><span class="k">return</span><span class="p">((</span><span class="nx">U</span><span class="p">(</span><span class="nx">aw</span><span class="p">)</span><span class="o">+</span><span class="nx">y</span><span class="p">(</span><span class="nx">aw</span><span class="p">))</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;light&quot;</span><span class="o">:</span><span class="s2">&quot;dark&quot;</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">history</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">ay</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aA</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">az</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">ax</span><span class="o">=</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ay</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;verbose&quot;</span> <span class="k">in</span> <span class="nx">ay</span><span class="o">&amp;&amp;</span><span class="nx">ay</span><span class="p">.</span><span class="nx">verbose</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">aA</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">G</span><span class="p">())}</span><span class="k">while</span><span class="p">(</span><span class="nx">aA</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">aw</span><span class="o">=</span><span class="nx">aA</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">ax</span><span class="p">){</span><span class="nx">az</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">aw</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="nx">az</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ar</span><span class="p">(</span><span class="nx">aw</span><span class="p">))}</span><span class="nx">al</span><span class="p">(</span><span class="nx">aw</span><span class="p">)}</span><span class="k">return</span> <span class="nx">az</span><span class="p">}}};</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">exports</span><span class="p">.</span><span class="nx">Chess</span><span class="o">=</span><span class="nx">Chess</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Chess</span><span class="p">})};</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.45451s from github-fe140-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

